{"version":3,"sources":["config.js","auth/index.js","core/Menu.js","core/cartHelpers.js","core/Layout.js","user/Signup.js","user/Signin.js","core/apiCore.js","core/ShowImage.js","core/Card.js","core/Search.js","core/Home.js","auth/PrivateRoute.js","user/UserDashboard.js","user/apiUser.js","auth/AdminRoute.js","user/AdminDashboard.js","admin/apiAdmin.js","admin/AddCategory.js","admin/AddProduct.js","core/Checkbox.js","core/RadioBox.js","core/fixedPrices.js","core/Shop.js","core/Product.js","core/Checkout.js","core/Cart.js","admin/Orders.js","user/Profile.js","admin/ManageProducts.js","admin/UpdateProduct.js","admin/updateCategory.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","window","localStorage","getItem","JSON","parse","isActive","history","path","location","pathname","color","withRouter","className","style","to","length","user","role","cursor","onClick","next","removeItem","fetch","method","then","response","console","log","catch","err","signout","push","Layout","title","description","children","Signup","useState","name","email","password","error","success","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","headers","Accept","body","stringify","json","data","display","onChange","type","Signin","loading","redirectToReferrer","signin","setItem","authenticate","getProducts","sortBy","getCategories","getFilteredProducts","skip","limit","filters","ShowImage","item","url","src","_id","alt","maxHeight","maxWidth","Card","product","showViewProductButton","showAddToCartButton","cartUpdate","showRemoveProductButton","setRun","f","run","undefined","redirect","setRedirect","count","setCount","addToCart","cart","Array","from","Set","map","p","id","find","addItem","productId","i","updateItem","shouldRedirect","substring","price","category","moment","createdAt","fromNow","quantity","showViewButton","showAddToCartBtn","splice","showRemoveButton","showCartUpdateOptions","Search","categories","search","results","searched","setData","useEffect","searchData","params","query","queryString","list","searchSubmit","e","searchMessage","onSubmit","c","key","placeholder","border","searchedProducts","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","setError","PrivateRoute","Component","component","rest","render","props","state","Dashboard","setHistory","token","init","userId","Authorization","getPurchaseHistory","h","products","purchaseHistory","AdminRoute","AdminDashboard","AddCategory","setName","setSuccess","createCategory","showSuccess","showError","autoFocus","required","AddProduct","shipping","photo","createdProduct","redirectToProfile","formData","FormData","files","set","createProduct","accept","Checkbox","handleFilters","checked","setCheked","handleToggle","currentCategoryId","indexOf","newCheckedCategoryId","RadioBox","prices","setValue","array","Shop","myFilters","setMyFilters","setCategories","setSkip","size","setSize","filteredResults","setFilteredResults","loadFilteredResults","newFilters","loadMore","toSkip","filterBy","priceValues","handlePrice","parseInt","Product","setProduct","relatedProduct","setRelatedProduct","loadSingleProduct","read","listRelated","match","Checkout","clientToken","instance","address","getToken","getBraintreeClientToken","handleAddress","getTotal","reduce","currentValue","nextValue","deliveryAddress","buy","requestPaymentMethod","paymentData","paymentMethodNonce","nonce","amount","processPayment","createOrderData","transaction_id","transaction","order","createOrder","message","showDropIn","onBlur","options","authorization","paypal","flow","onInstance","Cart","items","setItems","showItems","Orders","orders","setOrders","statusValues","setStatusValues","loadOrders","listOrders","loadStatusValues","getStatusValues","showInput","readOnly","handleStatusChange","orderId","status","updateOrderStatus","o","oIndex","borderBottom","index","showStatus","pIndex","padding","Profile","update","alert","auth","updateUser","profileUpdate","redirectUser","ManageProducts","setProducts","loadProducts","destroy","deleteProduct","UpdateProduct","getProduct","initCategories","updateProduct","UpdateCategory","categoryId","getCategory","submitCategoryForm","updateCategory","data-dismiss","aria-label","aria-hidden","Routes","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1a6295d8.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;\r\n","import { API } from '../config';\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/signup`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signin = user => {\r\n    return fetch(`${API}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const signout = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n};","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { signout, isAuthenticated } from \"../auth\";\r\nimport { itemTotal } from \"./cartHelpers\";\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: \"#ff9900\" };\r\n    } else {\r\n        return { color: \"#ffffff\" };\r\n    }\r\n};\r\n\r\nconst Menu = ({ history }) => (\r\n    <div>\r\n        <ul className=\"nav nav-tabs bg-primary\">\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/\")}\r\n                    to=\"/\"\r\n                >\r\n                    Home\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/shop\")}\r\n                    to=\"/shop\"\r\n                >\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n                <Link\r\n                    className=\"nav-link\"\r\n                    style={isActive(history, \"/cart\")}\r\n                    to=\"/cart\"\r\n                >\r\n                    Cart{\" \"}\r\n                    <sup>\r\n                        <small className=\"cart-badge\">{itemTotal()}</small>\r\n                    </sup>\r\n                </Link>\r\n            </li>\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/user/dashboard\")}\r\n                        to=\"/user/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                        className=\"nav-link\"\r\n                        style={isActive(history, \"/admin/dashboard\")}\r\n                        to=\"/admin/dashboard\"\r\n                    >\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            )}\r\n\r\n            {!isAuthenticated() && (\r\n                <Fragment>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signin\")}\r\n                            to=\"/signin\"\r\n                        >\r\n                            Signin\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            className=\"nav-link\"\r\n                            style={isActive(history, \"/signup\")}\r\n                            to=\"/signup\"\r\n                        >\r\n                            Signup\r\n                        </Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n\r\n            {isAuthenticated() && (\r\n                <li className=\"nav-item\">\r\n                    <span\r\n                        className=\"nav-link\"\r\n                        style={{ cursor: \"pointer\", color: \"#ffffff\" }}\r\n                        onClick={() =>\r\n                            signout(() => {\r\n                                history.push(\"/\");\r\n                            })\r\n                        }\r\n                    >\r\n                        Signout\r\n                    </span>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default withRouter(Menu);\r\n","export const addItem = (item = [], count = 0, next = f => f) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count: 1\r\n        });\r\n\r\n        // remove duplicates\r\n        // build an Array from new Set and turn it back into array using Array.from\r\n        // so that later we can re-map it\r\n        // new set will only allow unique values in it\r\n        // so pass the ids of each object/product\r\n        // If the loop tries to add the same value again, it'll get ignored\r\n        // ...with the array of ids we got on when first map() was used\r\n        // run map() on it again and return the actual product from the cart\r\n\r\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\r\n            return cart.find(p => p._id === id);\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n        next();\r\n    }\r\n};\r\n\r\nexport const itemTotal = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nexport const getCart = () => {\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateItem = (productId, count) => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart[i].count = count;\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n};\r\n\r\nexport const removeItem = productId => {\r\n    let cart = [];\r\n    if (typeof window !== 'undefined') {\r\n        if (localStorage.getItem('cart')) {\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if (product._id === productId) {\r\n                cart.splice(i, 1);\r\n            }\r\n        });\r\n\r\n        localStorage.setItem('cart', JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n};\r\n\r\nexport const emptyCart = next => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"../styles.css\";\r\n\r\nconst Layout = ({\r\n    title = \"Title\",\r\n    description = \"Description\",\r\n    className,\r\n    children\r\n}) => (\r\n    <div>\r\n        <Menu />\r\n        <div className=\"jumbotron\">\r\n            <h2>{title}</h2>\r\n            <p className=\"lead\">{description}</p>\r\n        </div>\r\n        <div className={className}>{children}</div>\r\n    </div>\r\n);\r\n\r\nexport default Layout;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../core/Layout';\r\nimport { signup } from '../auth';\r\n\r\nconst Signup = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    });\r\n\r\n    const { name, email, password, success, error } = values;\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false });\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    success: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password} />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            New account is created. Please <Link to=\"/signin\">Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signup\"\r\n            description=\"Signup to Marketplace E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showSuccess()}\r\n            {showError()}\r\n            {signUpForm()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../core/Layout\";\r\nimport { signin, authenticate, isAuthenticated } from \"../auth\";\r\n\r\nconst Signin = () => {\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true });\r\n        signin({ email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, loading: false });\r\n            } else {\r\n                authenticate(data, () => {\r\n                    setValues({\r\n                        ...values,\r\n                        redirectToReferrer: true\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const signUpForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input\r\n                    onChange={handleChange(\"email\")}\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    value={email}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input\r\n                    onChange={handleChange(\"password\")}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div\r\n            className=\"alert alert-danger\"\r\n            style={{ display: error ? \"\" : \"none\" }}\r\n        >\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-info\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToReferrer) {\r\n            if (user && user.role === 1) {\r\n                return <Redirect to=\"/admin/dashboard\" />; //\r\n            } else {\r\n                return <Redirect to=\"/user/dashboard\" />; //\r\n            }\r\n        }\r\n        if (isAuthenticated()) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Signin\"\r\n            description=\"Signin to Marketplace E-commerce App\"\r\n            className=\"container col-md-8 offset-md-2\"\r\n        >\r\n            {showLoading()}\r\n            {showError()}\r\n            {signUpForm()}\r\n            {redirectUser()}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Signin;\r\n","import { API } from \"../config\";\r\nimport queryString from \"query-string\";\r\n\r\nexport const getProducts = sortBy => {\r\n    return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n    const data = {\r\n        limit,\r\n        skip,\r\n        filters\r\n    };\r\n    return fetch(`${API}/products/by/search`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const list = params => {\r\n    const query = queryString.stringify(params);\r\n    console.log(\"query\", query);\r\n    return fetch(`${API}/products/search?${query}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const read = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listRelated = productId => {\r\n    return fetch(`${API}/products/related/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n    return fetch(`${API}/braintree/getToken/${userId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n    return fetch(`${API}/braintree/payment/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n    return fetch(`${API}/order/create/${userId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React from \"react\";\r\nimport { API } from \"../config\";\r\n\r\nconst ShowImage = ({ item, url }) => (\r\n    <div className=\"product-img\">\r\n        <img\r\n            src={`${API}/${url}/photo/${item._id}`}\r\n            alt={item.name}\r\n            className=\"mb-3\"\r\n            style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ShowImage;\r\n","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport { addItem, updateItem, removeItem } from './cartHelpers';\r\n\r\nconst Card = ({\r\n  product,\r\n  showViewProductButton = true,\r\n  showAddToCartButton = true,\r\n  cartUpdate = false,\r\n  showRemoveProductButton = false,\r\n  setRun = f => f,\r\n  run = undefined\r\n  // changeCartSize\r\n}) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showViewButton = showViewProductButton => {\r\n    return (\r\n      showViewProductButton && (\r\n        <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n          <button className=\"btn btn-outline-primary mt-2 mb-2 card-btn-1\">View Product</button>\r\n        </Link>\r\n      )\r\n    );\r\n  };\r\n  const addToCart = () => {    \r\n    addItem(product, setRedirect(true));\r\n    console.log('added to cart');\r\n  };\r\n\r\n  const shouldRedirect = redirect => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCartBtn = showAddToCartButton => {\r\n    return (\r\n      showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2 card-btn-1  \">\r\n          Add to cart\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n\r\n  const showStock = quantity => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary badge-pill\">In Stock </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\r\n    );\r\n  };\r\n\r\n  const handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n      updateItem(productId, event.target.value);\r\n    }\r\n  };\r\n\r\n  const showCartUpdateOptions = cartUpdate => {\r\n    return (\r\n      cartUpdate && (\r\n        <div>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Adjust Quantity</span>\r\n            </div>\r\n            <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n  const showRemoveButton = showRemoveProductButton => {\r\n    return (\r\n      showRemoveProductButton && (\r\n        <button\r\n          onClick={() => {\r\n            removeItem(product._id);\r\n            setRun(!run); // run useEffect in parent Cart\r\n          }}\r\n          className=\"btn btn-outline-danger mt-2 mb-2\"\r\n        >\r\n          Remove Product\r\n        </button>\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"card \">\r\n      <div className=\"card-header card-header-1 \">{product.name}</div>\r\n      <div className=\"card-body\">\r\n        {shouldRedirect(redirect)}\r\n        <ShowImage item={product} url=\"product\" />\r\n        <p className=\"card-p  mt-2\">{product.description.substring(0, 100)} </p>\r\n        <p className=\"card-p black-10\">Rs.{product.price}</p>\r\n        <p className=\"black-9\">Category: {product && product.category && product.category.name}</p>\r\n        <p className=\"black-8\">Added about {moment(product.createdAt).fromNow()}</p>\r\n        {showStock(product.quantity)}\r\n        <br />\r\n\r\n        {showViewButton(showViewProductButton)}\r\n\r\n        {showAddToCartBtn(showAddToCartButton)}\r\n\r\n        {showRemoveButton(showRemoveProductButton)}\r\n\r\n        {showCartUpdateOptions(cartUpdate)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getCategories, list } from \"./apiCore\";\r\nimport Card from \"./Card\";\r\n\r\nconst Search = () => {\r\n    const [data, setData] = useState({\r\n        categories: [],\r\n        category: \"\",\r\n        search: \"\",\r\n        results: [],\r\n        searched: false\r\n    });\r\n\r\n    const { categories, category, search, results, searched } = data;\r\n\r\n    const loadCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setData({ ...data, categories: data });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadCategories();\r\n    }, []);\r\n\r\n    const searchData = () => {\r\n        // console.log(search, category);\r\n        if (search) {\r\n            list({ search: search || undefined, category: category }).then(\r\n                response => {\r\n                    if (response.error) {\r\n                        console.log(response.error);\r\n                    } else {\r\n                        setData({ ...data, results: response, searched: true });\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    const searchSubmit = e => {\r\n        e.preventDefault();\r\n        searchData();\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        setData({ ...data, [name]: event.target.value, searched: false });\r\n    };\r\n\r\n    const searchMessage = (searched, results) => {\r\n        if (searched && results.length > 0) {\r\n            return `Found ${results.length} products`;\r\n        }\r\n        if (searched && results.length < 1) {\r\n            return `No products found`;\r\n        }\r\n    };\r\n\r\n    const searchedProducts = (results = []) => {\r\n        return (\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">\r\n                    {searchMessage(searched, results)}\r\n                </h2>\r\n\r\n                <div className=\"row\">\r\n                    {results.map((product, i) => (\r\n                        <div className=\"col-4 mb-3\">\r\n                            <Card key={i} product={product} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const searchForm = () => (\r\n        <form onSubmit={searchSubmit}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select\r\n                            className=\"btn mr-2\"\r\n                            onChange={handleChange(\"category\")}\r\n                        >\r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i) => (\r\n                                <option key={i} value={c._id}>\r\n                                    {c.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange(\"search\")}\r\n                        placeholder=\"Search by name\"\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"btn input-group-append\"\r\n                    style={{ border: \"none\" }}\r\n                >\r\n                    <button className=\"input-group-text\">Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">{searchForm()}</div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Marketplace Ecommerce App\"\r\n            description=\"Marketplace E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <Search />\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component} from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        getPurchaseHistory(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setHistory(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">history\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: Rs.{p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {moment(\r\n                                                        h.createdAt\r\n                                                    ).fromNow()}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { API } from \"../config\";\n\nexport const read = (userId, token) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const update = (userId, token, user) => {\n    return fetch(`${API}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};\n\nexport const getPurchaseHistory = (userId, token) => {\n    return fetch(`${API}/orders/by/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import { API } from '../config';\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n    return fetch(`${API}/category/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const updateCategory = (categoryId, userId, token, category) => {\r\n    return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            // content type?\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n    return fetch(`${API}/product/create/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n};\r\n\r\nexport const getCategory = categoryId => {\r\n    return fetch(`${API}/category/${categoryId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n    return fetch(`${API}/categories`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n    return fetch(`${API}/order/list/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n    return fetch(`${API}/order/status-values/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ status, orderId })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\r\n\r\nexport const getProducts = () => {\r\n    return fetch(`${API}/products?limit=undefined`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n        method: 'GET'\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n    return fetch(`${API}/product/${productId}/${userId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createCategory } from \"./apiAdmin\";\r\n\r\nconst AddCategory = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // destructure user and token from localstorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = e => {\r\n        setError(\"\");\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const clickSubmit = e => {\r\n        e.preventDefault();\r\n        setError(\"\");\r\n        setSuccess(false);\r\n        // make request to api to create category\r\n        createCategory(user._id, token, { name }).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setError(\"\");\r\n                setSuccess(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const newCategoryFom = () => (\r\n        <form onSubmit={clickSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    );\r\n\r\n    const showSuccess = () => {\r\n        if (success) {\r\n            return <h3 className=\"text-success\">{name} is created</h3>;\r\n        }\r\n    };\r\n\r\n    const showError = () => {\r\n        if (error) {\r\n            return <h3 className=\"text-danger\">Category should be unique</h3>;\r\n        }\r\n    };\r\n\r\n    const goBack = () => (\r\n        <div className=\"mt-5\">\r\n            <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                Back to Dashboard\r\n            </Link>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Add a new category\"\r\n            description={`G'day ${user.name}, ready to add a new category?`}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newCategoryFom()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddCategory;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProduct, getCategories } from './apiAdmin';\r\n\r\nconst AddProduct = () => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    // load categories and set form data\r\n    const init = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    categories: data,\r\n                    formData: new FormData()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        createProduct(user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is created!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n        const goBack = () => (\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/admin/dashboard\" className=\"text-warning\">\r\n                    Back to Dashboard\r\n                </Link>\r\n            </div>\r\n        );\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n    const [checked, setCheked] = useState([]);\r\n\r\n    const handleToggle = c => () => {\r\n        // return the first index or -1\r\n        const currentCategoryId = checked.indexOf(c);\r\n        const newCheckedCategoryId = [...checked];\r\n        // if currently checked was not already in checked state > push\r\n        // else pull/take off\r\n        if (currentCategoryId === -1) {\r\n            newCheckedCategoryId.push(c);\r\n        } else {\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        // console.log(newCheckedCategoryId);\r\n        setCheked(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n    };\r\n\r\n    return categories.map((c, i) => (\r\n        <li key={i} className=\"list-unstyled\">\r\n            <input\r\n                onChange={handleToggle(c._id)}\r\n                value={checked.indexOf(c._id === -1)}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n            />\r\n            <label className=\"form-check-label\">{c.name}</label>\r\n        </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useState } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;\n","export const prices = [\n    {\n        _id: 0,\n        name: \"Any\",\n        array: []\n    },\n    {\n        _id: 1,\n        name: \"Rs.0 to Rs.500\",\n        array: [0, 500]\n    },\n    {\n        _id: 2,\n        name: \"Rs.500 to Rs.1000\",\n        array: [500, 1000]\n    },\n    {\n        _id: 3,\n        name: \"Rs.1000 to Rs.5000\",\n        array: [1000, 5000]\n    },\n    {\n        _id: 4,\n        name: \"Rs.5000 to Rs.10000\",\n        array: [5000, 10000]\n    },\n    {\n        _id: 5,\n        name: \"More than Rs.10000\",\n        array: [10000, 99000]\n    }\n];\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find products of your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;\n","import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;\n","import React, { useState, useEffect } from 'react';\r\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\r\nimport { emptyCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link } from 'react-router-dom';\r\nimport \"braintree-web\"; // not using this package\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\n const Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (userId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: Rs.{getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from './Layout';\r\nimport { getCart } from './cartHelpers';\r\nimport Card from './Card';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = items => {\r\n        return (\r\n            <div>\r\n                <h2>Your cart has {`${items.length}`} items</h2>\r\n                <hr />\r\n                {items.map((product, i) => (\r\n                    <Card\r\n                        key={i}\r\n                        product={product}\r\n                        showAddToCartButton={false}\r\n                        cartUpdate={true}\r\n                        showRemoveProductButton={true}\r\n                        setRun={setRun}\r\n                        run={run}\r\n                    />\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const noItemsMessage = () => (\r\n        <h2>\r\n            Your cart is empty. <br /> <Link to=\"/shop\">Continue shopping</Link>\r\n        </h2>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Shopping Cart\"\r\n            description=\"Manage your cart items. Add remove checkout or continue shopping.\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">{items.length > 0 ? showItems(items) : noItemsMessage()}</div>\r\n\r\n                <div className=\"col-6\">\r\n                    <h2 className=\"mb-4\">Your cart summary</h2>\r\n                    <hr />\r\n                    <Checkout products={items} setRun={setRun} run={run} />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [statusValues, setStatusValues] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadOrders = () => {\r\n        listOrders(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setOrders(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadStatusValues = () => {\r\n        getStatusValues(user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setStatusValues(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadOrders();\r\n        loadStatusValues();\r\n    }, []);\r\n\r\n    const showOrdersLength = () => {\r\n        if (orders.length > 0) {\r\n            return (\r\n                <h1 className=\"text-danger display-2\">\r\n                    Total orders: {orders.length}\r\n                </h1>\r\n            );\r\n        } else {\r\n            return <h1 className=\"text-danger\">No orders</h1>;\r\n        }\r\n    };\r\n\r\n    const showInput = (key, value) => (\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">{key}</div>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                className=\"form-control\"\r\n                readOnly\r\n            />\r\n        </div>\r\n    );\r\n\r\n    const handleStatusChange = (e, orderId) => {\r\n        updateOrderStatus(user._id, token, orderId, e.target.value).then(\r\n            data => {\r\n                if (data.error) {\r\n                    console.log(\"Status update failed\");\r\n                } else {\r\n                    loadOrders();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    const showStatus = o => (\r\n        <div className=\"form-group\">\r\n            <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n            <select\r\n                className=\"form-control\"\r\n                onChange={e => handleStatusChange(e, o._id)}\r\n            >\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index) => (\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Orders\"\r\n            description={`G'day ${\r\n                user.name\r\n            }, you can manage all the orders here`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showOrdersLength()}\r\n\r\n                    {orders.map((o, oIndex) => {\r\n                        return (\r\n                            <div\r\n                                className=\"mt-5\"\r\n                                key={oIndex}\r\n                                style={{ borderBottom: \"5px solid indigo\" }}\r\n                            >\r\n                                <h2 className=\"mb-5\">\r\n                                    <span className=\"bg-primary\">\r\n                                        Order ID: {o._id}\r\n                                    </span>\r\n                                </h2>\r\n\r\n                                <ul className=\"list-group mb-2\">\r\n                                    <li className=\"list-group-item\">\r\n                                        {showStatus(o)}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Transaction ID: {o.transaction_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Amount: Rs.{o.amount}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered by: {o.user.name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Ordered on:{\" \"}\r\n                                        {moment(o.createdAt).fromNow()}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Delivery address: {o.address}\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                    Total products in the order:{\" \"}\r\n                                    {o.products.length}\r\n                                </h3>\r\n\r\n                                {o.products.map((p, pIndex) => (\r\n                                    <div\r\n                                        className=\"mb-4\"\r\n                                        key={pIndex}\r\n                                        style={{\r\n                                            padding: \"20px\",\r\n                                            border: \"1px solid indigo\"\r\n                                        }}\r\n                                    >\r\n                                        {showInput(\"Product name\", p.name)}\r\n                                        {showInput(\"Product price\", p.price)}\r\n                                        {showInput(\"Product total\", p.count)}\r\n                                        {showInput(\"Product Id\", p._id)}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link, Redirect } from 'react-router-dom';\nimport { read, update, updateUser } from './apiUser';\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: '',\n        email: '',\n        password: '',\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(data => {\n            if (data.error) {\n                // console.log(data.error);\n                alert(data.error);\n            } else {\n                updateUser(data, () => {\n                    setValues({\n                        ...values,\n                        name: data.name,\n                        email: data.email,\n                        success: true\n                    });\n                });\n            }\n        });\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input type=\"text\" onChange={handleChange('name')} className=\"form-control\" value={name} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input type=\"email\" onChange={handleChange('email')} className=\"form-control\" value={email} />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input type=\"password\" onChange={handleChange('password')} className=\"form-control\" value={password} />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout title=\"Profile\" description=\"Update your profile\" className=\"container-fluid\">\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadProducts = () => {\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n            } else {\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Manage Products\"\r\n            description=\"Perform CRUD on products\"\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"text-center\">\r\n                        Total {products.length} products\r\n                    </h2>\r\n                    <hr />\r\n                    <ul className=\"list-group\">\r\n                        {products.map((p, i) => (\r\n                            <li\r\n                                key={i}\r\n                                className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                            >\r\n                                <strong>{p.name}</strong>\r\n                                <Link to={`/admin/product/update/${p._id}`}>\r\n                                    <span className=\"badge badge-warning badge-pill\">\r\n                                        Update\r\n                                    </span>\r\n                                </Link>\r\n                                <span\r\n                                    onClick={() => destroy(p._id)}\r\n                                    className=\"badge badge-danger badge-pill\"\r\n                                >\r\n                                    Delete\r\n                                </span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <br />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\n\r\nconst UpdateProduct = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            <h4>Post Photo</h4>\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showLoading()}\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newPostForm()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getCategory, updateCategory } from './apiAdmin';\r\n\r\nconst UpdateCategory = ({ match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        error: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n\r\n    // destructure user and token from localStorage\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const { name, error, redirectToProfile } = values;\r\n\r\n    const init = categoryId => {\r\n        getCategory(categoryId, token).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.categoryId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value });\r\n    };\r\n\r\n    const submitCategoryForm = e => {\r\n        e.preventDefault();\r\n        // update with ? you should send category name otherwise what to update?\r\n        const category = {\r\n            name: name\r\n        };\r\n        updateCategory(match.params.categoryId, user._id, token, category).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    error: false,\r\n                    redirectToProfile: true\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const updateCategoryForm = () => (\r\n        <div className=\"wrap-login100 p-l-85 p-r-85 p-t-55 p-b-55\">\r\n            <form className=\"mb-5\" onSubmit={submitCategoryForm}>\r\n                <span className=\"login100-form-title p-b-32 m-b-7\">Update Category Form</span>\r\n                <span className=\"txt1 p-b-11\">Category Name</span>\r\n                <br />\r\n                <br />\r\n                <div className=\"wrap-input100 validate-input m-b-36\">\r\n                    <input\r\n                        onChange={handleChange('name')}\r\n                        value={name}\r\n                        className=\"input100\"\r\n                        type=\"text\"\r\n                        required\r\n                        name=\"name\"\r\n                    />\r\n                </div>\r\n                <div className=\"w-size25\">\r\n                    <button type=\"submit\" className=\"flex-c-m size2 bg1 bo-rad-23 hov1 m-text3 trans-0-4\">\r\n                        Save Changes\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className={'alert alert-danger'} role=\"alert\" style={{ display: error ? '' : 'none' }}>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                return <Redirect to=\"/admin/categories\" />;\r\n            }\r\n        }\r\n    };\r\n\r\n    const goBackBTN = () => {\r\n        return (\r\n            <div className=\"mt-5\">\r\n                <Link to=\"/admin/categories\" className=\"text-info\">\r\n                    Back To Admin Home\r\n                </Link>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title={`Hi ${user.name}`}\r\n            description={`This is Update Product Action Page`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2 m-b-250 mb-5\">\r\n                    {showError()}\r\n                    {updateCategoryForm()}\r\n                    {goBackBTN()}\r\n                    {redirectUser()}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default UpdateCategory;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Signup from './user/Signup';\r\nimport Signin from './user/Signin';\r\nimport Home from './core/Home';\r\nimport PrivateRoute from './auth/PrivateRoute';\r\nimport Dashboard from './user/UserDashboard';\r\nimport AdminRoute from './auth/AdminRoute';\r\nimport AdminDashboard from './user/AdminDashboard';\r\nimport AddCategory from './admin/AddCategory';\r\nimport AddProduct from './admin/AddProduct';\r\nimport Shop from './core/Shop';\r\nimport Product from './core/Product';\r\nimport Cart from './core/Cart';\r\nimport Orders from './admin/Orders';\r\nimport Profile from './user/Profile';\r\nimport ManageProducts from './admin/ManageProducts';\r\nimport UpdateProduct from './admin/UpdateProduct';\r\nimport UpdateCategory from './admin/updateCategory';\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/shop\" exact component={Shop} />\r\n                <Route path=\"/signin\" exact component={Signin} />\r\n                <Route path=\"/signup\" exact component={Signup} />\r\n                <PrivateRoute path=\"/user/dashboard\" exact component={Dashboard} />\r\n                <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n                <AdminRoute path=\"/create/category\" exact component={AddCategory} />\r\n                <AdminRoute path=\"/create/product\" exact component={AddProduct} />\r\n                <Route path=\"/product/:productId\" exact component={Product} />\r\n                <Route path=\"/cart\" exact component={Cart} />\r\n                <AdminRoute path=\"/admin/orders\" exact component={Orders} />\r\n                <PrivateRoute path=\"/profile/:userId\" exact component={Profile} />\r\n                <PrivateRoute path=\"/admin/products\" exact component={ManageProducts} />\r\n                <AdminRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct} />\r\n                <AdminRoute path=\"/admin/category/update/:categoryId\" exact component={UpdateCategory} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\nReactDOM.render(\n    <Routes />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}